{"version":3,"sources":["webpack:///./routes/fair_price/style.css","webpack:///./assets/images/tresor.png","webpack:///./components/zoomableImage/index.js","webpack:///./routes/fair_price/index.js","webpack:///./services/number/index.js"],"names":["ZoomableImage","_ref","src","_useState2","_slicedToArray","useState","zoomLevel","setZoomLevel","useEffect","zoomInterval","setInterval","prevZoomLevel","clearInterval","h","style","transform","concat","display","margin","zIndex","FairPrice","randomNumber","setRandomNumber","_useState4","userInput","setUserInput","_useState6","previousGuesses","setPreviousGuesses","_useState8","error","setError","_useState10","lives","setLives","_useState12","win","setWin","handleGuessClick","parsedInput","parseInt","some","guess","isNaN","guessRelation","prevGuesses","_toConsumableArray","relation","input","prevLives","console","log","handleLives","generateRandomNumber","randomNum","getRandomInt","className","for","type","id","name","placeholder","value","onChange","e","target","disabled","onKeyPress","key","onClick","Losing","Fragment","Winning","tresor","length","map","index","FaThumbsUp","color","marginRight","FaThumbsDown","FaHeart","fontSize","Solution","solution","n","Math","floor","random","hasUniqueDigits","_step","digitSet","Set","_iterator","_createForOfIteratorHelper","s","done","digit","has","add","err","f","generateSecretNumber","start","step","numbers","Array","from","_","secret","push","splice"],"mappings":"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","file":"route-fair_price.chunk.cf310.js","sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"error__Hrc1j\",\"errormessage\":\"errormessage__jMB98\"};","export default __webpack_public_path__ + \"ffe09f43eada841ade270aaeb7f58ef7.png\";","import { h } from \"preact\";\r\nimport { useState, useEffect } from \"preact/hooks\";\r\n\r\nconst ZoomableImage = ({ src }) => {\r\n  const [zoomLevel, setZoomLevel] = useState(1);\r\n\r\n  useEffect(() => {\r\n    const zoomInterval = setInterval(() => {\r\n      // Réglage du niveau de zoom entre 0.5 et 2 (par exemple)\r\n      setZoomLevel((prevZoomLevel) =>\r\n        prevZoomLevel === 2 ? 0.5 : prevZoomLevel + 0.5\r\n      );\r\n    }, 1000); // Changer la vitesse de zoom/dézoom en ajustant l'intervalle\r\n    return () => clearInterval(zoomInterval);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <img\r\n        src={src}\r\n        style={{\r\n          transform: `scale(${zoomLevel})`,\r\n          display: \"block\", // Pour éviter l'espace sous l'image\r\n          margin: \"0 auto\", // Centrer horizontalement\r\n          zIndex: -10\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ZoomableImage;\r\n","import { Fragment, h } from \"preact\";\r\nimport { useState, useEffect } from \"preact/hooks\";\r\nimport style from \"./style.css\";\r\nimport { FaThumbsUp, FaThumbsDown, FaHeart } from \"react-icons/fa\";\r\nimport tresor from \"../../assets/images/tresor.png\";\r\nimport ZoomableImage from \"../../components/zoomableImage\";\r\nimport { getRandomInt } from \"../../services/number\";\r\nimport Losing from \"../../components/losing\";\r\nimport Winning from \"../../components/winning\";\r\nimport Solution from \"../../components/solution\";\r\n\r\nconst FairPrice = () => {\r\n  const [randomNumber, setRandomNumber] = useState(null);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n  const [previousGuesses, setPreviousGuesses] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [lives, setLives] = useState(10);\r\n  const [win, setWin] = useState(false);\r\n\r\n  const resetGame = () => {\r\n    setUserInput(\"\");\r\n    setPreviousGuesses([]);\r\n    setError(\"\");\r\n    setLives(5);\r\n    setWin(false);\r\n    generateRandomNumber();\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setUserInput(e.target.value);\r\n  };\r\n\r\n  const handleLives = (input) => {\r\n    if (input !== randomNumber) {\r\n      setLives((prevLives) => prevLives - 1); // Décrémenter le nombre de vies\r\n    } else {\r\n      console.log(\"win\");\r\n      setWin(true);\r\n    }\r\n  };\r\n\r\n  const moreOrLess = (input) => {\r\n    return input < randomNumber\r\n    ? \"More\"\r\n    : \"Less\";\r\n  }\r\n\r\n  const handleGuessClick = () => {\r\n    try {\r\n      const parsedInput = parseInt(userInput, 10);\r\n      if (previousGuesses.some((guess) => guess.guess === parsedInput)) {\r\n        setError(\r\n          `${parsedInput} has already been guessed. Try a different number.\\n`\r\n        );\r\n        return;\r\n      }\r\n      if (\r\n        !isNaN(parsedInput) &&\r\n        parsedInput >= 1 &&\r\n        parsedInput <= 1000 &&\r\n        lives > 0\r\n      ) {\r\n        const guessRelation =\r\n          parsedInput === randomNumber\r\n            ? \"You found it !!\"\r\n            : moreOrLess(parsedInput);\r\n        setPreviousGuesses((prevGuesses) => [\r\n          ...prevGuesses,\r\n          { guess: parsedInput, relation: guessRelation },\r\n        ]);\r\n        setError(\"\");\r\n        handleLives(parsedInput);\r\n      } else if (lives === 0) {\r\n        setError(\"Vous n'avez plus de vies restantes, Perdu !\");\r\n      } else {\r\n        setError(\"Veuillez saisir un nombre entre 1 et 1000.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error parsing input:\", error);\r\n      setError(\"Error parsing input. Please enter a valid number.\");\r\n    }\r\n  };\r\n\r\n  const generateRandomNumber = () => {\r\n    try {\r\n      const randomNum = getRandomInt(1000);\r\n      setRandomNumber(randomNum);\r\n    } catch (error) {\r\n      console.error(\"Error generating random number:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    try {\r\n      generateRandomNumber();\r\n      return () => {};\r\n    } catch (error) {\r\n      console.error(\"Error in useEffect:\", error);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"center-page\">\r\n      <label className=\"centerLabel\" for=\"price\">\r\n        Welcome to the Fair price, in this game you should guess the hidden\r\n        price. You have a limited number of lives ({lives}). With each failed\r\n        attempt, you will have a hint <b>less</b> or <b>more</b>. Here we go you\r\n        can start to guess :\r\n      </label>\r\n      <div className=\"inputContainer\">\r\n        <input\r\n          type=\"number\"\r\n          id=\"price\"\r\n          name=\"price\"\r\n          placeholder=\"your proposition\"\r\n          value={userInput}\r\n          onChange={handleInputChange}\r\n          className={error ? style.error : \"\"}\r\n          disabled={win}\r\n          onKeyPress={(e) => {\r\n            if (e.key === \"Enter\") {\r\n              handleGuessClick();\r\n            }\r\n          }}\r\n        />\r\n        <button onClick={handleGuessClick} disabled={win}>\r\n          {!win ? \"Guess\" : \"Found\"}\r\n        </button>\r\n      </div>\r\n      {error && <div className={style.errormessage}>{error}</div>}\r\n      {lives == 0 && <Losing />}\r\n      {win && (\r\n        <Fragment>\r\n          <Winning />\r\n          <ZoomableImage src={tresor} />\r\n        </Fragment>\r\n      )}\r\n      {previousGuesses.length > 0 && (\r\n        <div>\r\n          <p>Previous guesses:</p>\r\n          <ul>\r\n            {previousGuesses.map((guess, index) => (\r\n              <li key={index}>\r\n                {guess.guess} -{\" \"}\r\n                {guess.relation === \"You found it !!\" ? (\r\n                  <FaThumbsUp color=\"green\" style={{ marginRight: \"5px\" }} />\r\n                ) : (\r\n                  <FaThumbsDown color=\"red\" style={{ marginRight: \"5px\" }} />\r\n                )}\r\n                {guess.relation}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n      <div>\r\n        Lives number: {lives}\r\n        {lives != 0 ? (\r\n          <FaHeart style={{ fontSize: \"2em\", margin: \"0 5px\" }} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      {win || lives === 0 ? (\r\n        <div>\r\n          {randomNumber !== null && (\r\n            <Solution type=\"number\" solution={randomNumber} />\r\n          )}\r\n          <button onClick={resetGame}>Reset Game</button>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FairPrice;\r\n","/**\r\n * Method for generating a random number between 1 and n\r\n * @param {*} n max value for the generated number\r\n * @returns a number between 0 and n\r\n */\r\nexport const getRandomInt = (n) => {\r\n  return Math.floor(Math.random() * n) + 1;\r\n};\r\n\r\n/**\r\n * Method for creating a list ranging from a minimum value to a maximum value with a predefined increment\r\n * @param {*} start start value \r\n * @param {*} end end value\r\n * @param {*} step increment between two values\r\n * @returns\r\n */\r\nexport const range = (start, end, step) => {\r\n  step = step || 1;\r\n  return Array.from(\r\n    { length: Math.floor((end - start) / step) + 1 },\r\n    (_, index) => start + index * step\r\n  );\r\n};\r\n\r\n /**\r\n   * Method checking the unicity of the digits in one number.\r\n   * @param {*} input\r\n   * @returns true if unique digit in number\r\n   */\r\n export const hasUniqueDigits = (input) => {\r\n  const digitSet = new Set();\r\n  for (const digit of input) {\r\n    if (digitSet.has(digit)) {\r\n      return false;\r\n    }\r\n    digitSet.add(digit);\r\n  }\r\n  return true;\r\n};\r\n\r\n  /**\r\n   * Method for generating a number with four unique digits\r\n   * @returns\r\n   */\r\n  export const generateSecretNumber = () => {\r\n    let numbers = range(1, 9, 1);\r\n    console.log(numbers);\r\n    const secret = [];\r\n    while (secret.length < 4) {\r\n      let random = getRandomInt(numbers.length);\r\n      secret.push(numbers[random - 1]);\r\n      numbers.splice(random - 1, 1);\r\n    }\r\n    return secret;\r\n  };\r\n"],"sourceRoot":""}